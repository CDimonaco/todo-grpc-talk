// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	todo "github.com/CDimonaco/todo-grpc-talk/internal/todo"
	mock "github.com/stretchr/testify/mock"
)

// Creator is an autogenerated mock type for the Creator type
type Creator struct {
	mock.Mock
}

// CreateTodo provides a mock function with given fields: ctx, id, name, description
func (_m *Creator) CreateTodo(ctx context.Context, id string, name string, description string) (*todo.Todo, error) {
	ret := _m.Called(ctx, id, name, description)

	var r0 *todo.Todo
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) *todo.Todo); ok {
		r0 = rf(ctx, id, name, description)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*todo.Todo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string, string) error); ok {
		r1 = rf(ctx, id, name, description)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCreator interface {
	mock.TestingT
	Cleanup(func())
}

// NewCreator creates a new instance of Creator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCreator(t mockConstructorTestingTNewCreator) *Creator {
	mock := &Creator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
